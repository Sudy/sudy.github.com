<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 网络安全 | SudyDuan's Blog]]></title>
  <link href="http://Sudy.github.com/blog/categories/网络安全/atom.xml" rel="self"/>
  <link href="http://Sudy.github.com/"/>
  <updated>2012-11-25T21:39:37+08:00</updated>
  <id>http://Sudy.github.com/</id>
  <author>
    <name><![CDATA[Sudy Duan]]></name>
    <email><![CDATA[SudyDuan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Libnids使用总结]]></title>
    <link href="http://Sudy.github.com/blog/2012/11/25/libnidszong-jie/"/>
    <updated>2012-11-25T20:11:00+08:00</updated>
    <id>http://Sudy.github.com/blog/2012/11/25/libnidszong-jie</id>
    <content type="html"><![CDATA[<h2>使用中可能遇到的问题</h2>

<ul>
<li><p>无法捕获TC协议的报文</p>

<p>  TCP流还原是Libnids中一个非常重要的功能，一般人在安装完libnids后一般都会拿samples文件夹里的printall.c练练手，看看libnids是否运行正常，这个例子是打印出所有流经网卡的TCP数据包信息。这个问题的起因是libnids默认开启了TCP的首部校验，在这里进行了TCP的首部校验，如果报文无法通过校验，则该报文被丢弃。因此程序虽然能够正常地编译通过，但是却无法捕获到数据包。知道问题的起因，我们就能对症下药。</p>

<p>  解决这个问题通常有两种方法，第一种比较复杂，不推荐使用。在Libnids源码包中tcp.c 文件中大概742行的位置有如下代码：</p>

<pre><code>  if (my_tcp_check(this_tcphdr, iplen - 4 * this_iphdr-&gt;ip_hl,
           this_iphdr-&gt;ip_src.s_addr, this_iphdr-&gt;ip_dst.s_addr)) {
         nids_params.syslog(NIDS_WARN_TCP, NIDS_WARN_TCP_HDR, this_iphdr,
             this_tcphdr);
         return;
    }
</code></pre>

<p>  我们可以看出这段代码是进行TCP首部校验，如果无法通过校验，还会作为NIDS_WARN事件记录到系统日志中。所以我们可以注释掉这段代码，然后对源码进行重新编译安装。一般来说是先步骤如下，首先进入libnids安装包的根目录，然后执行以下命令。</p>

<pre><code>  $ ./configure
  $ make
  $ make install
</code></pre>

<p>  第二种方法是在libnids的初始化函数nids_init()运行之前，加入如下代码：</p>

<pre><code>      struct nids_chksum_ctl temp;
      temp.netaddr = 0;
      temp.mask = 0;
      temp.action = 1;
      nids_register_chksum_ctl(&amp;temp,1);
</code></pre>

<p>  不用说，这段代码的目的也是取消校验和，其中nids_chksum_ctl是libnids中定义的数据结构，netaddr表示网络地址，mask表示掩码，如果两个都为0表示的是所有的地址，action为1表示不用首部校验。</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
